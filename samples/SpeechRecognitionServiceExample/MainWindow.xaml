<Window x:Class="Microsoft.CognitiveServices.SpeechRecognition.MainWindow"
        x:Name="_mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Microsoft.CognitiveServices.SpeechRecognition Example" Margin="5,5,5,5" MinWidth="800" Background="Black" Foreground="White" Height="646">
    <Window.Resources>
        <SolidColorBrush x:Key="BrushWhite" Color="White"></SolidColorBrush>
        <SolidColorBrush x:Key="BrushBlack" Color="Black"></SolidColorBrush>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="353*" MinWidth="200"/>
            <ColumnDefinition Width="23*"/>
            <ColumnDefinition Width="375*" MinWidth="200"/>
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Foreground="White">Project Cognitive Services Speech To Text Sample</Label>
        <Grid Grid.Row="0" Grid.Column="2" Margin="0,0,10,0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBox Background="Black" Foreground="White" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="2" Text="{Binding ElementName=_mainWindow, Path=SubscriptionKey, Mode=TwoWay}"/>
                <Button Margin="5, 0, 0, 0" Padding="5, 0, 5, 0" Height="30" VerticalAlignment="Top" Background="black"    Foreground="White" Click="SaveKey_Click">Save Key</Button>
                <Button Margin="5, 0, 0, 0" Padding="5, 0, 5, 0" Background="black"    Foreground="White" Click="DeleteKey_Click">Delete Key</Button>
                <Button Click="HelpButton_Click" HorizontalAlignment="Center" Margin="5, 0, 0, 0" Padding="5, 0, 5, 0" Background="black"    Foreground="White" Content="Get Key" />
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,1,0,-1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <GroupBox x:Name="_radioGroup" Grid.Row="0" Margin="10,10,10,10" Padding="0, 0, 10, 10">
                <StackPanel Orientation="Vertical">
                    <Label Foreground="White">Speech Recognition Source:</Label>
                    <RadioButton x:Name="_micRadioButton" Foreground="White" IsChecked="{Binding ElementName=_mainWindow, Path=IsMicrophoneClientShortPhrase}" Margin="10, 10, 0, 0" Click="RadioButton_Click">Use Microphone with ShortPhrase mode</RadioButton>
                    <RadioButton x:Name="_micDictationRadioButton" Foreground="White" IsChecked="{Binding ElementName=_mainWindow, Path=IsMicrophoneClientDictation}" Margin="10, 10, 0, 0" Click="RadioButton_Click" Checked="_micDictationRadioButton_Checked">Use Microphone with LongDictation mode</RadioButton>
                    <RadioButton x:Name="_micIntentRadioButton" Foreground="White" IsChecked="{Binding ElementName=_mainWindow, Path=IsMicrophoneClientWithIntent}" Margin="10, 10, 0, 0" Click="RadioButton_Click">Use Microphone and intent detection</RadioButton>
                    <Label Margin="30,0,0,0" Foreground="White">(* LUIS registration is needed.)</Label>
                    <RadioButton x:Name="_dataShortRadioButton" Foreground="White" IsChecked="{Binding ElementName=_mainWindow, Path=IsDataClientShortPhrase}" Margin="10, 10, 0, 0" Click="RadioButton_Click">Use wav file for ShortPhrase mode</RadioButton>
                    <RadioButton x:Name="_dataLongRadioButton" Foreground="White" IsChecked="{Binding ElementName=_mainWindow, Path=IsDataClientDictation}" Margin="10, 10, 0, 0" Click="RadioButton_Click">Use wav file for LongDictation mode</RadioButton>
                    <RadioButton x:Name="_dataShortIntentRadioButton" Foreground="White" IsChecked="{Binding ElementName=_mainWindow, Path=IsDataClientWithIntent}" Margin="10, 10, 0, 0" Click="RadioButton_Click">Use wav file and intent detection</RadioButton>
                    <Label Margin="30,0,0,0" Foreground="White">(* LUIS registration is needed.)</Label>
                </StackPanel>
            </GroupBox>
            <Grid Grid.Row="2" Margin="10, 0, 10, 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Button x:Name="_startButton" Background="black"    Foreground="White" Grid.Column="0" Content="Start _Recognition" Click="StartButton_Click" Margin="5" Padding="5"/>
                <Button x:Name="_button1" Background="black"    Foreground="White" Grid.Column="3" Content="Test Send Keys" Click="button1_Click" Margin="5" Padding="5"/>
            </Grid>
            <Grid HorizontalAlignment="Left" Height="131" Margin="10,10,0,0" Grid.Row="1" VerticalAlignment="Top" Width="355">
                <TextBox x:Name="Result" HorizontalAlignment="Center" Height="80" Margin="10,10,5,0" TextWrapping="Wrap" Text="Preliminary results" VerticalAlignment="Top" Width="340" Background="Black" Foreground="White"/>
                <TextBox x:Name="finalResult" Foreground="White"  Background="Black"  HorizontalAlignment="Left" Height="127" Margin="10,95,0,-91" TextWrapping="Wrap" Text="Final result" VerticalAlignment="Top" Width="340"/>
            </Grid>
        </Grid>
        <TextBox x:Name="_logText" Foreground="White" Background="Black" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalScrollBarVisibility="Visible" Margin="0, 10, 10, 10"/>
    </Grid>
</Window>
